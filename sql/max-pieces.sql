SELECT

CID,
OLD_NBR,
PRIMARY_DESC,
TG.STORE_NBR,
STORE_NAME,
NEGOCIO,
TYPE_CODE,
CASE WHEN RRP_IND_ IS NULL THEN 'N' ELSE RRP_IND_ END AS RRP_IND,
ITEM_LENGTH_QTY * 10 AS ITEM_LENGTH_QTY_	,
ITEM_HEIGHT_QTY	 * 10 AS ITEM_HEIGHT_QTY_,
ITEM_WIDTH_QTY	* 10  AS ITEM_WIDTH_QTY_,
( ITEM_LENGTH_QTY_	* ITEM_HEIGHT_QTY_ * ITEM_WIDTH_QTY_) AS ITEM_CUBE_,
--ITEM_CUBE_QTY,
COST,
VNPK_QTY,
WHPK_QTY,
WHPK_LENGTH_QTY * 10 AS WHPK_LENGTH_QTY_	,
WHPK_HEIGHT_QTY * 10 AS WHPK_HEIGHT_QTY_ ,
WHPK_WIDTH_QTY	* 10 AS WHPK_WIDTH_QTY_ ,

--WHPK_CUBE_QTY  ,

NOMBRE_MUEBLE,
ANCHO_cm,
PROFUNDO_cm,
ALTO_cm,
--MUEBLE_cm3
--FLOOR (CAST( (MUEBLE_cm3 / WHPK_CUBE_QTY ) AS DECIMAL (28,2)) ) AS MAX_WHPK_QTY,
--CAST( (MAX_WHPK_QTY * WHPK_QTY) AS DECIMAL (28,2) ) AS MAX_FTR_QTY,
CAST ( '2.54' AS DECIMAL (28,5) ) AS FINGER_SPACE,
CAST ( '4.4958' AS DECIMAL (28,5)) AS TRAY_SPACE,
CAST ( '122' AS DECIMAL (28,5)) AS PALLET_WIDTH,
CAST ( '122' AS DECIMAL (28,5)) AS PALLET_LENGTH,
CAST ( '150' AS DECIMAL (28,5)) AS PALLET_ALLOWED_HEIGHT, 
CAST ( 	FLOOR( PALLET_WIDTH /  ITEM_LENGTH_QTY_ ) AS DECIMAL(28,0)) AS PZS_TAR_ANCHO, 
CAST ( FLOOR( PALLET_ALLOWED_HEIGHT / ITEM_HEIGHT_QTY_ ) AS DECIMAL(28,0)) AS PZS_TAR_ALTO,
CAST ( FLOOR( PALLET_LENGTH /  ITEM_WIDTH_QTY_ ) AS DECIMAL(28,0)) AS PZS_TAR_PROFUNDO,
CAST ( FLOOR( PALLET_WIDTH / WHPK_LENGTH_QTY_ ) AS DECIMAL(28,0)) AS RRP_TAR_ANCHO,
CAST ( FLOOR( PALLET_ALLOWED_HEIGHT / WHPK_HEIGHT_QTY_ ) AS DECIMAL(28,0)) AS RRP_TAR_ALTO,
CAST ( FLOOR( PALLET_LENGTH / WHPK_WIDTH_QTY_ )	AS DECIMAL(28,0)) AS RRP_TAR_PROFUNDO,

CASE WHEN CAST( ((ALTO_cm-11) / ( ITEM_HEIGHT_QTY_ + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ( ITEM_HEIGHT_QTY_ + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0))
						WHEN CAST( ((ALTO_cm-11) / ((2* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((2* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((3* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((3* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((4* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((4* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((5* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((5* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((6* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / (( 6*ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0))
						WHEN CAST( ((ALTO_cm-11) / ((7* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((7* ITEM_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0))
						ELSE 7 END AS NIVELES_NO_RRP,
						
CAST ( ( ALTO_cm - 11 ) - NIVELES_NO_RRP * ( FINGER_SPACE + TRAY_SPACE ) AS DECIMAL (28,2)) AS AH_NO_RRP,
CAST ( AH_NO_RRP / NIVELES_NO_RRP  AS DECIMAL (28,2)) AS LH_NO_RRP,
CAST ( ( ANCHO_cm * PROFUNDO_cm *  ( ALTO_cm -11 )) - ( NIVELES_NO_RRP *  (( FINGER_SPACE * ANCHO_cm * PROFUNDO_cm ) + ( TRAY_SPACE * ANCHO_cm * PROFUNDO_cm ))) AS DECIMAL (28,2)) AS AVAIL_SPACE_NO_RRP,
CAST ( FLOOR( LH_NO_RRP / ITEM_HEIGHT_QTY_ ) AS DECIMAL (28,0)) AS CAMAS_X_NIVEL_NO_RRP,
CAST ( CAMAS_X_NIVEL_NO_RRP * NIVELES_NO_RRP AS DECIMAL (28,0)) AS CAMAS_TTL_NO_RRP,
CAST ( FLOOR( ANCHO_cm / ITEM_LENGTH_QTY_ ) AS DECIMAL (28,0)) AS PZS_ANCHO_NO_RRP,
CAST ( FLOOR( PROFUNDO_cm / ITEM_WIDTH_QTY_ ) AS DECIMAL (28,0)) AS PZS_PROF_NO_RRP,
CAST ( CAMAS_TTL_NO_RRP * PZS_ANCHO_NO_RRP * PZS_PROF_NO_RRP AS DECIMAL (28,0)) AS PZS_MAX_NO_RRP,

	
CASE WHEN CAST( ((ALTO_cm-11) / ( WHPK_HEIGHT_QTY_ + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ( WHPK_HEIGHT_QTY_ + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0))
						WHEN CAST( ((ALTO_cm-11) / ((2* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((2* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((3* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((3* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((4* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((4* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((5* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((5* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0)) 
						WHEN CAST( ((ALTO_cm-11) / ((6* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / (( 6*WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0))
						WHEN CAST( ((ALTO_cm-11) / ((7* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,2)) < 7 THEN CAST( ((ALTO_cm-11) / ((7* WHPK_HEIGHT_QTY_) + TRAY_SPACE + FINGER_SPACE)) AS DECIMAL (28,0))
						ELSE 7 END AS NIVELES_RRP,
						

CAST( ( ALTO_cm-11 ) - NIVELES_RRP * (FINGER_SPACE+TRAY_SPACE) AS DECIMAL(28,2)) AS AH_RRP,
CAST( AH_RRP / NIVELES_RRP AS DECIMAL (28,2)) AS LH_RRP,
CAST ( ( ANCHO_cm * PROFUNDO_cm *  ( ALTO_cm -11 )) - ( NIVELES_RRP *  (( FINGER_SPACE * ANCHO_cm * PROFUNDO_cm ) + ( TRAY_SPACE * ANCHO_cm * PROFUNDO_cm ))) AS DECIMAL (28,2)) AS AVAIL_SPACE_RRP,
CAST( FLOOR ( LH_RRP / WHPK_HEIGHT_QTY_ ) AS DECIMAL (28,0)) AS CAMAS_X_NIVEL_RRP,
CAST( CAMAS_X_NIVEL_RRP * NIVELES_RRP AS DECIMAL (28,0)) AS CAMAS_TTL_RRP,	
CAST( FLOOR( ANCHO_cm  / WHPK_LENGTH_QTY_ ) AS DECIMAL (28,0))  AS RRP_ANCHO,
CAST( FLOOR( PROFUNDO_cm  / WHPK_WIDTH_QTY_ ) AS DECIMAL (28,0)) 	 AS RRP_PROFUNDO,
CAST ( CAMAS_TTL_RRP * RRP_ANCHO * RRP_PROFUNDO AS DECIMAL (28,0)) AS MAX_RRP, 
CAST( MAX_RRP * ( WHPK_LENGTH_QTY_	 * WHPK_HEIGHT_QTY_ * WHPK_WIDTH_QTY_) AS DECIMAL (28,2)) AS RRP_FULL_VOL ,
CAST ( AVAIL_SPACE_RRP - RRP_FULL_VOL AS DECIMAL (28,2)) AS LEFT_AVAIL_SPACE,

CASE WHEN  LEFT_AVAIL_SPACE > ITEM_CUBE_ THEN FLOOR ( LEFT_AVAIL_SPACE /  ITEM_CUBE_)
						ELSE 0 END AS PZS_BKP_EXTRA,


CASE 	WHEN NOMBRE_MUEBLE LIKE '%Tarima%'  AND RRP_IND = 'N' THEN CAST( PZS_TAR_ANCHO*PZS_TAR_ALTO*PZS_TAR_PROFUNDO AS DECIMAL (28,0))
						WHEN NOMBRE_MUEBLE LIKE '%Tarima%'  AND RRP_IND = 'Y' THEN CAST ( RRP_TAR_ANCHO * RRP_TAR_ALTO * RRP_TAR_PROFUNDO * WHPK_QTY  AS DECIMAL (28,0)) 
						WHEN NOMBRE_MUEBLE LIKE '%Cabecera%'  AND RRP_IND = 'N' THEN CAST ( PZS_MAX_NO_RRP  AS DECIMAL (28,0))
						WHEN NOMBRE_MUEBLE LIKE '%Cabecera%'  AND RRP_IND = 'Y' THEN CAST ( MAX_RRP * WHPK_QTY AS DECIMAL (28,0)) 
ELSE 'No cabe' 	END AS MAX_PZS_EXHIB
																							


FROM 

						( 
						
							SELECT DISTINCT
																			TRIM(T3.ACCT_DEPT_NBR)||'.'||TRIM(SUBSTR(T3.FINELINE,1,2)) AS LLAVEDEPCAT,
																			TRIM(T3.ACCT_DEPT_NBR)||TRIM(T3.TYPE_CODE)||TRIM(T3.ORDER_BOOK_SEQUENCE_NUMBER) AS LLAVE_SUB,
																			TRIM(T3.UPC)||TRIM(T1.STORE_NBR) AS LLAVEUPC,
																			TRIM(T5.NEGOCIO)||TRIM(T3.OLD_NBR) AS LLAVETG,
																			T3.ACCT_DEPT_NBR,
																			T3.VENDOR_NBR,
																			CAST ((T2.VENDOR_NBR*1000)+(T2.VENDOR_DEPT_NBR*10)+(T2.VENDOR_SEQ_NBR) AS INTEGER ) AS VENDOR9_NBR,
																			T3.VENDOR_NAME,
																			T3.UPC,
																			T2.REPL_GROUP_NBR AS CID,
																			T3.ITEM_NBR,
																			T3.OLD_NBR,
																			T3.PRIMARY_DESC,
																			T3.SIZE_DESC,
																			T2.ITEM_CUBE_QTY,
																			T2.ITEM_LENGTH_QTY	,
																			T2.ITEM_HEIGHT_QTY	,
																			T2.ITEM_WIDTH_QTY	,
																			T3.COST,
																			T3.VNPK_QTY,
																			T2.VNPK_CUBE_QTY,
																			T3.WHPK_QTY,
																			T2.WHPK_CUBE_QTY,
																			T2.WHPK_LENGTH_QTY	,
																			T2.WHPK_WIDTH_QTY	,
																			T2.WHPK_HEIGHT_QTY	,
																			T3.STATUS_CODE,
																			T3.TYPE_CODE,
																			T3.ITM_MBM_CODE,
																			T3.ORDBK_FLAG,
																			T3.ORDER_BOOK_SEQUENCE_NUMBER AS SUB_TIPO,
																			T3.CANCEL_WHEN_OUT_FLAG,
																			T2.WHSE_ALIGN_TYPE_CD,
																			T3.ITEM_STORE_TYPE,
																			T3.FINELINE,
																			SUBSTR(T3.FINELINE,1,2) AS CATEGORY_NBR,
																			T2.MDSE_CATG_NBR,
																			T3.EFFECTIVE_DATE,			
																			T2.SHLF_LIFE_DAYS_QTY,																																																																																																																																	
						
																			T1.STORE_NBR,
																			T4.STORE_NAME,
																			T5.NEGOCIO,
																			T4.OPEN_STATUS,
																			T4.OPEN_DATE,
																			T1.CARRY_OPTION,
																			T1.CARRIED_STATUS,
																			T2.BRAND_ID,
																			CASE WHEN T2.BRAND_ID IN (312625,312627,312624,312633,312626,312629,312631,312630, 312634,312635,312628,312632,315263,317731,312648,314450,321588,314614,316405,328877,328870,328774,332303,335021,335023,35347) THEN 'MARCAS ESTRATEGICAS' ELSE 'REGULAR' END AS MARCAS_ESTRATEGICAS,
																			
																			SUM(CAST (CASE WHEN T1.ON_HAND_1_QTY<0.00 THEN  0.00 ELSE  T1.ON_HAND_1_QTY END AS DECIMAL (28,2))) AS OHQTY,
																			SUM(CAST (CASE WHEN T1.ON_HAND_1_QTY<0.00 THEN  0.00 ELSE  T1.ON_HAND_1_QTY*T3.COST END AS DECIMAL (28,2))) AS OHCOST,
																			
																			SUM(CAST (CASE WHEN T1.IN_TRANSIT_QTY<0.00 THEN  0.00 ELSE  T1.IN_TRANSIT_QTY END AS DECIMAL (28,2))) AS ITQTY,
																			SUM(CAST (CASE WHEN T1.IN_TRANSIT_QTY<0.00 THEN  0.00 ELSE  T1.IN_TRANSIT_QTY*T3.COST END AS DECIMAL (28,2))) AS ITCOST,
																			
																			SUM(CAST (CASE WHEN T1.IN_WHS_QTY<0.00 THEN  0.00 ELSE  T1.IN_WHS_QTY END AS DECIMAL (28,2))) AS IWQTY,
																			SUM(CAST (CASE WHEN T1.IN_WHS_QTY<0.00 THEN  0.00 ELSE  T1.IN_WHS_QTY*T3.COST END AS DECIMAL (28,2))) AS IWCOST,
																			
																			SUM(CAST (CASE WHEN T1.ON_ORDER_QTY<0.00 THEN  0.00 ELSE  T1.ON_ORDER_QTY END AS DECIMAL (28,2))) AS OOQTY,
																			SUM(CAST (CASE WHEN T1.ON_ORDER_QTY<0.00 THEN  0.00 ELSE  T1.ON_ORDER_QTY*T3.COST END AS DECIMAL (28,2))) AS OOCOST
																			
																			
																			FROM
																			MX_CF_VM.INFOREM_MANAGED_SKU	T1,
																			MX_CF_VM.ITEM T2,
																			MX_CF_VM.ITEM_DESC T3,
																			MX_CF_VM.STORE_INFO T4,
																			(SELECT DISTINCT STORE_NBR, TRAIT_NBR, CASE WHEN TRAIT_NBR=297 THEN 'SUPERCENTER' WHEN TRAIT_NBR=9 THEN 'BODEGA' WHEN TRAIT_NBR=11 THEN 'SUPERAMA' WHEN TRAIT_NBR=1312 THEN 'MIBODEGA' WHEN TRAIT_NBR=969 THEN 'BAE'WHEN TRAIT_NBR=136 THEN 'MEDIMART' ELSE 'OTRO' END AS NEGOCIO FROM MX_CF_VM.TRAIT_STORE WHERE TRAIT_NBR IN (11,297,1312,969,136,9)) T5 
																			
																			WHERE
																			T1.ITEM_NBR=T2.ITEM_NBR
																			AND T1.ITEM_NBR=T3.ITEM_NBR
																			AND T4.STORE_NBR = T1.STORE_NBR
																			AND T5.STORE_NBR=T1.STORE_NBR
																			AND T3.OLD_NBR IN (  100290389, 100297915, 9220061, 9261624, 9275008, 9275029, 9275071, 9275092 )
																			--AND T4.STORE_NBR IN ( 2344 )
																			
																			
																			GROUP BY
																			1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48
																			
						) AS TG												
						
						LEFT JOIN
						
						
						(
													SELECT
					
													STORE_NBR,
													NOMBRE_MUEBLE,
													ALTO_cm,
													ANCHO_cm,
													PROFUNDO_cm
													
													FROM 
													
													MR101_WM_AD_HOC.PROMOFUL_STORE_FEATURES_SC

							) AS TM
						
																				
							ON ( TG.STORE_NBR=TM.STORE_NBR )
							
							LEFT JOIN
							
							(
							
																	SELECT 
																	
																	ITEM_NBR,
																	CASE WHEN RETAIL_READY_PACK_IND IS NULL THEN 'N' ELSE RETAIL_READY_PACK_IND END AS RRP_IND_
																	
																	FROM MR101_WM_AD_HOC.ITEMFILE_RRP_IND


							) AS RRP
								ON ( TG.OLD_NBR=RRP.ITEM_NBR )																							
							
WHERE 

OLD_NBR IN (  100290389, 100297915, 9220061, 9261624, 9275008, 9275029, 9275071, 9275092 )
AND TG.STORE_NBR IN ( 2344 ) 			

