WITH

-- Tiendas validas
STORE AS (
  SELECT DISTINCT
    TR.STORE_NBR,
		TR.TRAIT_NBR,
		CASE WHEN TR.TRAIT_NBR = 297 THEN 'SUPERCENTER'
		  WHEN TR.TRAIT_NBR = 9 THEN 'BODEGA'
		  WHEN TR.TRAIT_NBR = 11 THEN 'SUPERAMA'
		  WHEN TR.TRAIT_NBR = 1312 THEN 'MIBODEGA'
		  WHEN TR.TRAIT_NBR = 969 THEN 'BAE'
		  WHEN TR.TRAIT_NBR = 136 THEN 'MEDIMART'
		  ELSE 'OTRO'
		END AS NEGOCIO
  FROM MX_CF_VM.TRAIT_STORE AS TR
    INNER JOIN MX_CF_VM.STORE_INFO AS T
      ON TR.STORE_NBR = T.STORE_NBR
	WHERE
	  TR.TRAIT_NBR IN (11, 297, 1312, 969, 136, 9)
	  AND NEGOCIO IN (?NEGOCIO)
    AND T.OPEN_STATUS NOT IN (0, 3, 7, 6, 8)
),

-- Articulos referenciados asociados a los old_nbrs (para sacar las ventas cuando cambian el old_nbr)
-- Aqui *NO* se debe aplicar los filtros de validez
XREF AS (
  SELECT
    PRIME_XREF_ITEM_NBR,
    ITEM_NBR,
    REPL_GROUP_NBR
  FROM
    MX_CF_VM.ITEM A
  WHERE
    PRIME_XREF_ITEM_NBR IN (
      SELECT DISTINCT
        PRIME_XREF_ITEM_NBR
      FROM
        MX_CF_VM.ITEM
      WHERE
        OLD_NBR IN (?OLD_NBRS)
    )
),

-- Tabla con combinaciones activas actualmente (se le pegan las ventas historicas del PRIME al item_nbr actual)
-- Aqui *SI* se debe aplicar los filtros de validez, porque solo aplica a los actuales
TG AS (
  SELECT DISTINCT
    A.STORE_NBR,
    XREF.PRIME_XREF_ITEM_NBR,
    I.OLD_NBR,
    I.PRIMARY_DESC,
    XREF.REPL_GROUP_NBR AS CID,
    ST.NEGOCIO,
    I.SELL_PRICE
  FROM
    MX_CF_VM.INFOREM_MANAGED_SKU AS A
    INNER JOIN MX_CF_VM.ITEM_DESC AS I
      ON A.ITEM_NBR = I.ITEM_NBR
    INNER JOIN STORE AS ST
      ON A.STORE_NBR = ST.STORE_NBR
    INNER JOIN XREF
      ON A.ITEM_NBR = XREF.ITEM_NBR
  WHERE
		I.STATUS_CODE IN ('A')
		AND I.ORDBK_FLAG IN ('Y')
		AND I.CANCEL_WHEN_OUT_FLAG IN ('N')
		AND I.ITM_MBM_CODE IN ('M', 'I')
    AND A.CARRY_OPTION IN ('R')
    AND A.CARRIED_STATUS IN ('R')
),

-- Tabla de ventas (se agrupa por PRIME por si cambiaron el item_nbr de un articulo)
POS AS (
  SELECT
		XREF.PRIME_XREF_ITEM_NBR,
		VTAS.STORE_NBR,
    VTAS.WM_YR_WK,
		SUM(CASE WHEN VTAS.WKLY_QTY < 0 THEN 0 ELSE VTAS.WKLY_QTY END) AS WKLY_QTY,
		SUM(CASE WHEN VTAS.WKLY_SALES < 0 THEN 0 ELSE VTAS.WKLY_SALES END) AS WKLY_SALES
	FROM
		MX_CF_VM.SKU_DLY_POS AS VTAS
    	INNER JOIN XREF
      	ON VTAS.ITEM_NBR = XREF.ITEM_NBR
	WHERE
		VTAS.REPORT_CODE NOT IN (8)
		AND VTAS.WM_YR_WK >= ('?WK_INICIO')
		AND VTAS.WM_YR_WK <= ('?WK_FINAL')
	GROUP BY 1, 2, 3
)

SELECT DISTINCT
  TG.NEGOCIO,
  TG.PRIME_XREF_ITEM_NBR,
  TG.OLD_NBR,
  TG.PRIMARY_DESC,
  TG.CID,
  POS.WM_YR_WK,
  SUM(POS.WKLY_SALES)/SUM(POS.WKLY_QTY) AS SELL_PRICE,
  SUM(POS.WKLY_QTY) AS WKLY_QTY
FROM TG
  INNER JOIN POS
    ON (POS.PRIME_XREF_ITEM_NBR = TG.PRIME_XREF_ITEM_NBR AND POS.STORE_NBR = TG.STORE_NBR)
GROUP BY 1, 2, 3, 4, 5, 6

ORDER BY 1, 2, 3, 4, 5
